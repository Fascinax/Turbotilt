version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: userdb,authdb,paymentdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Services
  user-service:
    build:
      context: ./user-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
    ports:
      - "8081:8081"

  auth-service:
    build:
      context: ./auth-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/authdb
    ports:
      - "8082:8082"

  payment-service:
    build:
      context: ./payment-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/paymentdb
    ports:
      - "8083:8083"

  notification-service:
    build:
      context: ./notification-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
    ports:
      - "8084:8084"

  analytics-service:
    build:
      context: ./analytics-service
    depends_on:
      - user-service
      - payment-service
    ports:
      - "8085:8085"

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - auth-service
      - payment-service
      - notification-service
      - analytics-service

  # Frontend
  frontend:
    build:
      context: ./frontend
    ports:
      - "4200:80"
    depends_on:
      - api-gateway

volumes:
  postgres-data:
  rabbitmq-data:
