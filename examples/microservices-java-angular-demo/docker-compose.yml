version: '3.8'

services:
  # Services backend
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - QUARKUS_PROFILE=dev
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - MICRONAUT_ENVIRONMENTS=dev
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
      - user-service
      - product-service
    networks:
      - microservices-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - user-service
      - product-service
      - order-service
    networks:
      - microservices-network

  # Services de support
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - microservices-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

networks:
  microservices-network:
    driver: bridge

volumes:
  rabbitmq-data:
