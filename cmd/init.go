package cmd

import (
	"fmt"
	"github.com/spf13/cobra"
	"turbotilt/internal/render"
	"turbotilt/internal/scan"
)

var (
	// Options pour la commande init
	forceFramework string
	port           string
	jdkVersion     string
	devMode        bool
)

var initCmd = &cobra.Command{
	Use:   "init",
	Short: "Scan et g√©n√®re Tiltfile & Compose",
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Println("üîç Initialisation de Turbotilt...")

		// D√©tecter le framework ou utiliser celui sp√©cifi√©
		framework := forceFramework
		var err error
		
		if framework == "" {
			framework, err = scan.DetectFramework()
			if err != nil {
				fmt.Printf("‚ùå Erreur lors de la d√©tection du framework: %v\n", err)
				return
			}
		}

		fmt.Printf("‚úÖ Framework d√©tect√©/s√©lectionn√©: %s\n", framework)

		// Pr√©parer les options de rendu
		renderOpts := render.Options{
			Framework:   framework,
			Port:        port,
			JDKVersion:  jdkVersion,
			DevMode:     devMode,
		}

		// G√©n√©rer les fichiers
		if err := render.GenerateDockerfile(renderOpts); err != nil {
			fmt.Printf("‚ùå Erreur lors de la g√©n√©ration du Dockerfile: %v\n", err)
			return
		}

		if err := render.GenerateCompose(renderOpts); err != nil {
			fmt.Printf("‚ùå Erreur lors de la g√©n√©ration du docker-compose.yml: %v\n", err)
			return
		}

		if err := render.GenerateTiltfile(renderOpts); err != nil {
			fmt.Printf("‚ùå Erreur lors de la g√©n√©ration du Tiltfile: %v\n", err)
			return
		}

		fmt.Println("‚ú® Configuration Turbotilt termin√©e!")
		fmt.Println("üìã Fichiers g√©n√©r√©s:")
		fmt.Println("   - Dockerfile")
		fmt.Println("   - docker-compose.yml")
		fmt.Println("   - Tiltfile")
		fmt.Println("\n‚ñ∂Ô∏è Pour lancer l'environnement: turbotilt up")
	},
}

func init() {
	rootCmd.AddCommand(initCmd)
	
	// Flags pour la commande init
	initCmd.Flags().StringVarP(&forceFramework, "framework", "f", "", "Sp√©cifier manuellement le framework (spring, quarkus, java)")
	initCmd.Flags().StringVarP(&port, "port", "p", "8080", "Port √† exposer pour l'application")
	initCmd.Flags().StringVarP(&jdkVersion, "jdk", "j", "17", "Version du JDK √† utiliser")
	initCmd.Flags().BoolVarP(&devMode, "dev", "d", true, "Activer les configurations de d√©veloppement")
}
